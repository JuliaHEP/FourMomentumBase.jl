var documenterSearchIndex = {"docs":
[{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [LorentzVectorBase]","category":"page"},{"location":"95-reference/#LorentzVectorBase.PtEtaPhiM","page":"Reference","title":"LorentzVectorBase.PtEtaPhiM","text":"PtEtaPhiM <: AbstractCoordinateSystem\n\nCylindrical coordinate system for four-momenta. Using this requires the implementation of the following interface functions:\n\npt(::CustomFourMomentum)\neta(::CustomFourMomentum)\nphi(::CustomFourMomentum)\nmass(::CustomFourMomentum)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#LorentzVectorBase.XYZE","page":"Reference","title":"LorentzVectorBase.XYZE","text":"XYZE <: AbstractCoordinateSystem\n\nCartesian coordinate system for four-momenta. Using this requires the implementation of the following interface functions:\n\npx(::CustomFourMomentum)\npy(::CustomFourMomentum)\npz(::CustomFourMomentum)\nenergy(::CustomFourMomentum)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#LorentzVectorBase.boost_beta-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.boost_beta","text":"boost_beta(::XYZE, mom )\n\nReturn spatialmagnitude of the beta vector for a given four-momentum, i.e. the spatialmagnitude of the four-momentum divided by its 0-component.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to sqrt(px^2 + py^2 + pz^2)/E.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.boost_gamma-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.boost_gamma","text":"boost_gamma(::XYZE,mom)\n\nReturn the relativistic gamma factor for a given four-momentum, i.e. the inverse square root of one minus the beta vector squared.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum with beta vector β, this is equivalent to 1/sqrt(1- β^2).\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.coordinate_names","page":"Reference","title":"LorentzVectorBase.coordinate_names","text":"coordinate_names(::AbstractCoordinateSystem)::Tuple{Symbols}\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.coordinate_system","page":"Reference","title":"LorentzVectorBase.coordinate_system","text":"coordinate_system(::MomType)::CS where {CS <: AbstractCoordinateSystem}\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.cos_phi-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.cos_phi","text":"cos_phi(::XYZE, mom)\n\nReturn the cosine of the azimuthal angle for a given four-momentum.\n\nnote: Note\nThis is an equivalent but faster version of cos(azimuthal_angle(mom)); see phi.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.cos_theta-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.cos_theta","text":"cos_theta(::XYZE, mom)\n\nReturn the cosine of the theta angle for a given four-momentum.\n\nnote: Note\nThis is an equivalent but faster version of cos(polar_angle(::XYZE, mom)); see polar_angle.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.energy","page":"Reference","title":"LorentzVectorBase.energy","text":"energy(mom)\n\nTBW\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.eta-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.eta","text":"eta(::XYZE, mom)\n\nTBW\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.mass-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.mass","text":"mass(::XYZE,mom)\n\nReturn the the invariant mass of a given four-momentum, i.e. the square root of the minkowski dot with itself.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to sqrt(E^2 - (px^2 + py^2 + pz^2)).\n\nnote: Note\nIf the squared invariant mass m2 is negative, -sqrt(-m2) is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.mass2-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.mass2","text":"mass2(::XYZE,mom)\n\nReturn the squared invariant mass of a given four-momentum, i.e. the minkowski dot with itself.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to E^2 - (px^2 + py^2 + pz^2).\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.minus_component-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.minus_component","text":"minus_component(::XYZE, mom)\n\nReturn the minus component for a given four-momentum in light-cone coordinates.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to (E-pz)/2.\n\nnote: Note\nThe light-cone coordinates are defined w.r.t. to the 3-axis.\n\nwarning: Warning\nThe definition `p^- := (E - p_z)/2 differs from the usual definition of light-cone coordinates in general relativity.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.mt-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.mt","text":"mt(::XYZE,mom)\n\nReturn the transverse momentum for a given four-momentum, i.e. the square root of its squared transverse mass.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to sqrt(E^2 - pz^2).\n\nnote: Note\nThe transverse components are defined w.r.t. to the 3-axis.\n\nnote: Note\nIf the squared transverse mass mt2 is negative, -sqrt(-mt2) is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.mt2-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.mt2","text":"mt2(::XYZE, mom)\n\nReturn the squared transverse mass for a given four-momentum, i.e. the difference of its squared 0- and 3-component.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to E^2 - pz^2.\n\nnote: Note\nThe transverse components are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.phi-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.phi","text":"phi(::XYZE, mom)\n\nReturn the phi angle for a given four-momentum, i.e. the azimuthal angle of its spatial components in spherical coordinates.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to atan(py,px).\n\nnote: Note\nThe spherical coordinates are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.plus_component-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.plus_component","text":"plus_component(::XYZE, mom)\n\nReturn the plus component for a given four-momentum in light-cone coordinates.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to (E+pz)/2.\n\nnote: Note\nThe light-cone coordinates are defined w.r.t. to the 3-axis.\n\nwarning: Warning\nThe definition `p^+ := (E + p_z)/2 differs from the usual definition of light-cone coordinates in general relativity.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.polar_angle-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.polar_angle","text":"polar_angle(::XYZE,mom)\n\nReturn the theta angle for a given four-momentum, i.e. the polar angle of its spatial components in spherical coordinates.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum with spatial_magnitude rho, this is equivalent to arccos(pz/rho), which is also equivalent to arctan(sqrt(px^2+py^2)/pz).\n\nnote: Note\nThe spherical coordinates are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.pt-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.pt","text":"pt(::XYZE, mom)\n\nReturn the transverse momentum for a given four-momentum, i.e. the spatial_magnitude of its transverse components.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to sqrt(px^2 + py^2).\n\nnote: Note\nThe transverse components are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.pt2-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.pt2","text":"pt2(::XYZE,mom)\n\nReturn the squared transverse momentum for a given four-momentum, i.e. the sum of its squared 1- and 2-component.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to px^2 + py^2.\n\nnote: Note\nThe transverse components are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.px","page":"Reference","title":"LorentzVectorBase.px","text":"px(mom)\n\nTBW\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.py","page":"Reference","title":"LorentzVectorBase.py","text":"py(mom)\n\nTBW\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.pz","page":"Reference","title":"LorentzVectorBase.pz","text":"pz(mom)\n\nTBW\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.rapidity-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.rapidity","text":"rapidity(::XYZE, mom)\n\nReturn the rapidity for a given four-momentum.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to 0.5*log((E+pz)/(E-pz)).\n\nnote: Note\nThe transverse components are defined w.r.t. to the 3-axis.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.sin_phi-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.sin_phi","text":"sin_phi(::XYZE,mom)\n\nReturn the sine of the azimuthal angle for a given four-momentum.\n\nnote: Note\nThis is an equivalent but faster version of sin(azimuthal_angle(mom)); see phi.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.spatial_magnitude-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.spatial_magnitude","text":"spatial_magnitude(::XYZE,mom)\n\nReturn the spatial_magnitude of a given four-momentum, i.e. the euklidian norm spatial components.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to sqrt(px^2 + py^2 + pz^2).\n\nwarning: Warning\nThis function differs from a similar function for the TLorentzVector used in the famous ROOT library.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LorentzVectorBase.spatial_magnitude2-Tuple{LorentzVectorBase.XYZE, Any}","page":"Reference","title":"LorentzVectorBase.spatial_magnitude2","text":"spatial_magnitude2(::XYZE, mom)\n\nReturn the square of the spatial_magnitude of a given four-momentum, i.e. the sum of the squared spatial components.\n\nexample: Example\nIf (px,py,pz,E) is a four-momentum, this is equivalent to px^2+ py^2 + pz^2.\n\nwarning: Warning\nThis function differs from a similar function for the TLorentzVector used in the famous ROOT library.\n\n\n\n\n\n","category":"method"},{"location":"10-interface/#interface","page":"Interface","title":"Interface","text":"","category":"section"},{"location":"10-interface/#Implementation","page":"Interface","title":"Implementation","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"This section explains how the object can become a LorentzVector. A type MyLorentzVector will comply to the LorentzVector interface if one of the following et of methods is implemented.","category":"page"},{"location":"10-interface/#Option-1:-position-with-cartesian-coordinates","page":"Interface","title":"Option 1: position with cartesian coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinatesystem(::Type{MyLorentzVector}) = LorentzVectorBase.XYZE Declare the preferred coordinated system\nLorentzVectorBase.x(::Tupe{MyLorentzVector}) x cartesian coordinate\nLorentzVectorBase.y(::Tupe{MyLorentzVector}) y cartesian coordinate\nLorentzVectorBase.z(::Tupe{MyLorentzVector}) z cartesian coordinate\nLorentzVectorBase.t(::Tupe{MyLorentzVector}) t cartesian coordinate\n ","category":"page"},{"location":"10-interface/#Option-2:-four-momentum-with-catesian-coordinates","page":"Interface","title":"Option 2: four-momentum with catesian coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinatesystem(::Type{MyLorentzVector}) = LorentzVectorBase.XYZE Declare the preferred coordinated system\nLorentzVectorBase.px(::Tupe{MyLorentzVector}) x cartesian coordinate\nLorentzVectorBase.py(::Tupe{MyLorentzVector}) y cartesian coordinate\nLorentzVectorBase.pz(::Tupe{MyLorentzVector}) z cartesian coordinate\nLorentzVectorBase.pt(::Tupe{MyLorentzVector}) t cartesian coordinate\n ","category":"page"},{"location":"10-interface/#Option-3-four-momentum-with-cylindrical-coordinates","page":"Interface","title":"Option 3 four-momentum with cylindrical coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinatesystem(::Type{MyLorentzVector}) Declare the preferred coordinated system. Must return PtEtaPhiM, PtEtaPhiE, PtYPhiM, or PtYPhiE (from LorentzVectorBase).\nLorentzVectorBase.pt(::Tupe{MyLorentzVector}) x cartesian coordinate\nLorentzVectorBase.phi(::Tupe{MyLorentzVector}) z cartesian coordinate","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"<br> and one of","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":" \nLorentzVectorBase.eta(::Tupe{MyLorentzVector}) y cartesian coordinate\nLorentzVectorBase.rapidity(::Tupe{MyLorentzVector}) y cartesian coordinate","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"<br> and one of","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"| | | |-|-| | LorentzVectorBase.energy(::Tupe{MyLorentzVector})          | energy          | | LorentzVectorBase.mass(::Tupe{MyLorentzVector})            | invariant mass  |","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"The methods that returns the coordinates of the prefered system (returned by coordinatesystem()) must be implemented.","category":"page"},{"location":"10-interface/#Optional-methods","page":"Interface","title":"Optional methods","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"| | | |-|-| | LorentzVectorBase.mass2(::MyType{MyLorentzVector})              | mass to the square | | LorentzVectorBase.spatial_magnitude2(::MyType{MyLorentzVector}) | mass to the square | | Any of the above method i.e, a method of option Y when methods of option X are provided ||","category":"page"},{"location":"10-interface/#LorentzVectorBase","page":"Interface","title":"LorentzVectorBase","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"The type can optionnally be a subtype of the LorentzVectorBase.LorentzVectorBase to benefit from default implementations of lorentz vector algebra.","category":"page"},{"location":"10-interface/#Basic-functions-provided-for-subtypes-of-LorentzVectorBase","page":"Interface","title":"Basic functions provided for subtypes of LorentzVectorBase","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Base.+(::LorentzVectorBase, ::LorentzVectorBase)\nBase.-(::LorentzVectorBase, ::LorentzVectorBase)\nLinearAlgebra.dot(::LorentzVectorBase, ::LorentzVectorBase)¹","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"¹x⋅y = LinearAlgebra.dot(x,y)","category":"page"},{"location":"","page":"LorentzVectorBase","title":"LorentzVectorBase","text":"CurrentModule = LorentzVectorBase","category":"page"},{"location":"#LorentzVectorBase","page":"LorentzVectorBase","title":"LorentzVectorBase","text":"","category":"section"},{"location":"","page":"LorentzVectorBase","title":"LorentzVectorBase","text":"Documentation for LorentzVectorBase.","category":"page"}]
}
