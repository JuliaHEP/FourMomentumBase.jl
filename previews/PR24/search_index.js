var documenterSearchIndex = {"docs":
[{"location":"95-reference/","page":"Reference","title":"Reference","text":"CurrentModule=LorentzVectorBase","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Interface","page":"Reference","title":"Interface","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":" coordinate_system\ncoordinate_names","category":"page"},{"location":"95-reference/#LorentzVectorBase.coordinate_system","page":"Reference","title":"LorentzVectorBase.coordinate_system","text":"coordinate_system(::MomType)::CS where {CS <: AbstractCoordinateSystem}\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.coordinate_names","page":"Reference","title":"LorentzVectorBase.coordinate_names","text":"coordinate_names(::AbstractCoordinateSystem)::Tuple{Symbols}\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#Supported-coordinate-systems","page":"Reference","title":"Supported coordinate systems","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"XYZT\nPxPyPzE\nPtEtaPhiM","category":"page"},{"location":"95-reference/#LorentzVectorBase.XYZT","page":"Reference","title":"LorentzVectorBase.XYZT","text":"XYZT <: AbstractCoordinateSystem\n\nCartesian coordinate system for four-vectors. Using this requires the implementation of the following interface functions:\n\nLorentzVectorBase.x(::CustomFourVector)\nLorentzVectorBase.y(::CustomFourVector)\nLorentzVectorBase.z(::CustomFourVector)\nLorentzVectorBase.t(::CustomFourVector)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#LorentzVectorBase.PxPyPzE","page":"Reference","title":"LorentzVectorBase.PxPyPzE","text":"PxPyPzE <: AbstractCoordinateSystem\n\nCartesian coordinate system for four-momenta. Using this requires the implementation of the following interface functions:\n\nLorentzVectorBase.px(::CustomFourMomentum)\nLorentzVectorBase.py(::CustomFourMomentum)\nLorentzVectorBase.pz(::CustomFourMomentum)\nLorentzVectorBase.E(::CustomFourMomentum)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#LorentzVectorBase.PtEtaPhiM","page":"Reference","title":"LorentzVectorBase.PtEtaPhiM","text":"PtEtaPhiM <: AbstractCoordinateSystem\n\nCylindrical coordinate system for four-momenta. Using this requires the implementation of the following interface functions:\n\npt(::CustomFourMomentum)\neta(::CustomFourMomentum)\nphi(::CustomFourMomentum)\nmass(::CustomFourMomentum)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#Supported-getter-functions","page":"Reference","title":"Supported getter functions","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"  x\n  y\n  z\n  t\n  px\n  py\n  pz\n  E\n  pt\n  pt2\n  eta\n  phi\n  spatial_magnitude\n  spatial_magnitude2\n  mass\n  mass2\n  boost_beta\n  boost_gamma\n  mt2\n  mt\n  rapidity\n  polar_angle\n  cos_theta\n  cos_phi\n  sin_phi\n  plus_component\n  minus_component","category":"page"},{"location":"95-reference/#LorentzVectorBase.x","page":"Reference","title":"LorentzVectorBase.x","text":"x(lv)\n\nReturn the x-component (first spatial component) of the Lorentz-vector-like lv.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.y","page":"Reference","title":"LorentzVectorBase.y","text":"y(lv)\n\nReturn the y-component (second spatial component) of the Lorentz-vector-like lv.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.z","page":"Reference","title":"LorentzVectorBase.z","text":"z(lv)\n\nReturn the z-component (third spatial component) of the Lorentz-vector-like lv.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.t","page":"Reference","title":"LorentzVectorBase.t","text":"t(lv)\n\nReturn the time (energy) component of the Lorentz-vector-like lv.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.px","page":"Reference","title":"LorentzVectorBase.px","text":"px(lv)\n\nReturn the x-component of a given Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum `(px, py, pz, E)`, this function returns the `px` component.\n\nSee Also\n\nLorentzVectorBase.x: The x-component of a Lorentz-vector-like, which is equivalent to px.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.py","page":"Reference","title":"LorentzVectorBase.py","text":"py(lv)\n\nReturn the y-component of a given Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns the py component.\n\nSee Also\n\nLorentzVectorBase.y: The y-component of a Lorentz-vector-like, which is equivalent to py.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.pz","page":"Reference","title":"LorentzVectorBase.pz","text":"pz(lv)\n\nReturn the z-component of a given Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns the pz component.\n\nSee Also\n\nLorentzVectorBase.z: The z-component of a Lorentz-vector-like, which is equivalent to pz.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.E","page":"Reference","title":"LorentzVectorBase.E","text":"E(lv)\n\nReturn the energy component (E) of a given Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns the E component.\n\nSee Also\n\nLorentzVectorBase.t: The time component of a Lorentz-vector-like, which is equivalent to E.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.pt","page":"Reference","title":"LorentzVectorBase.pt","text":"pt(lv)\n\nReturn the transverse momentum (p_T) of a given Lorentz-vector-like lv, defined as the Euclidean magnitude of the momentum components in the x-y plane.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns sqrt(px^2 + py^2).\n\nNotes\n\nThe transverse components are defined with respect to the z-axis (3-axis), representing the perpendicular momentum to this axis.\n\nSee Also\n\npt2: For the squared transverse momentum.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.pt2","page":"Reference","title":"LorentzVectorBase.pt2","text":"pt2(lv)\n\nReturn the squared transverse momentum (p_T^2) of a given Lorentz-vector-like lv. The transverse momentum is defined with respect to the z-axis (3-axis) and is the sum of the squares of the x- and y-components.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns px^2 + py^2.\n\nNotes\n\nThe transverse components are the momentum projections in the x-y plane, perpendicular to the z-axis.\n\nSee Also\n\npt: For the transverse momentum.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.eta","page":"Reference","title":"LorentzVectorBase.eta","text":"eta(lv)\n\nReturn the pseudorapidity (eta) of a given Lorentz-vector-like lv. The pseudorapidity is a commonly used quantity in high-energy physics, particularly in collider experiments, and is defined as:\n\n    eta = -log(tan(theta 2))\n\nwhere theta is the polar angle of the Lorentz-vector-like relative to the z-axis.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function log(tan(theta/2)) where theta is given by the polar_angle.\n\nwarning: Warning\nIf the transverse momentum (pt) is zero (i.e., the particle is aligned with the beam axis), a warning is raised, and a large pseudorapidity value (Â±10e10) is returned as a convention. This occurs because the pseudorapidity is ill-defined when pt = 0.\n\nNotes\n\nPseudorapidity is approximately equal to the rapidity y in the ultra-relativistic limit (when the particle's mass is negligible compared to its energy).\n\nSee Also\n\nrapidity: For the rapidity of the Lorentz-vector-like.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.phi","page":"Reference","title":"LorentzVectorBase.phi","text":"phi(lv)\n\nReturn the azimuthal angle (phi) of the Lorentz-vector-like lv.\n\nThe azimuthal angle is the angle between the x-axis and the projection of the Lorentz-vector-like on the x-y plane.\n\nExample\n\nIf ``(x, y, z, t)`` is a four-vector, this is equivalent to ``atan(y / x)``.\n\nnote: Note\nThe azimuthal angle is defined with respect to the z-axis.\n\nSee Also\n\nLorentzVectorBase.sin_phi: for a faster version of the sine of the azimuthal angle.\nLorentzVectorBase.cos_phi: for a faster version of the cosine of the azimuthal angle.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.spatial_magnitude","page":"Reference","title":"LorentzVectorBase.spatial_magnitude","text":"spatial_magnitude(lv)\n\nReturn the spatial magnitude of the Lorentz-vector-like lv, i.e., the magnitude of its spatial components.\n\nExample\n\nIf the Lorentz-vector-like is a four-vector (x, y, z, t), this function returns sqrt(x^2 + y^2 + z^2).\n\nwarning: Warning\nThis function differs from the TLorentzVector::P() function in the ROOT library.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.spatial_magnitude2","page":"Reference","title":"LorentzVectorBase.spatial_magnitude2","text":"spatial_magnitude2(lv)\n\nReturn the square of the spatial magnitude of the Lorentz-vector-like lv, i.e., the sum of the squares of its spatial components.\n\nExample\n\nIf the Lorentz-vector-like is four-vector (x, y, z, t), this function returns x^2 + y^2 + z^2.\n\nwarning: Warning\nThis function differs from the TLorentzVector::P2() function in the ROOT library.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.mass","page":"Reference","title":"LorentzVectorBase.mass","text":"mass(lv)\n\nReturn the invariant mass  of the Lorentz-vector-like lv, computed as the square root of the Minkowski inner product of the four-vector components with itself.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns sqrt(EÂ² - (pxÂ² + pyÂ² + pzÂ²)).\n\nNotes\n\nIf the squared invariant mass mÂ² is negative, this function returns -sqrt(-mÂ²) to ensure a real result. This can happen in certain unphysical cases where the energy component is smaller than the spatial momentum magnitude.\n\nSee Also\n\nmass2: For the squared invariant mass calculation.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.mass2","page":"Reference","title":"LorentzVectorBase.mass2","text":"mass2(lv)\n\nReturn the squared invariant mass of the Lorentz-vector-like lv, computed as the Minkowski inner product of the four-vector components with itself.\n\nExample\n\nFor a four-momentum (p_x p_y p_z E), this function returns E^2 - (p_x^2 + p_y^2 + p_z^2).\n\nSee Also\n\nmass: For the invariant mass, i.e., the square root of this value.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.boost_beta","page":"Reference","title":"LorentzVectorBase.boost_beta","text":"boost_beta(lv)\n\nReturn the magnitude of the velocity (beta) of a particle as a fraction of the speed of light of the Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns sqrt(pxÂ² + pyÂ² + pzÂ²) / E.\n\nThrows\n\nArgumentError if the time (energy) component is zero while the spatial components are non-zero, as this results in an undefined velocity.\n\nNotes\n\nIf both the time (energy) and spatial components are zero, the function returns zero (beta = 0), as this represents a stationary object with no motion.\n\nSee Also\n\nboost_gamma: For the relativistic gamma factor, which depends on beta.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.boost_gamma","page":"Reference","title":"LorentzVectorBase.boost_gamma","text":"boost_gamma(lv)\n\nReturn the relativistic gamma factor (gamma) for the Lorentz-vector-like lv.\n\nExample\n\nFor a four-momentum (px, py, pz, E) with velocity Î², this function returns 1 / sqrt(1 - Î²Â²).\n\nSee Also\n\nboost_beta: For the velocity Î², which is used to compute Î³.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.mt2","page":"Reference","title":"LorentzVectorBase.mt2","text":"mt2(lv)\n\nReturn the squared transverse mass (m_T^2) of a given Lorentz-vector-like lv, which is the difference between the squared time- (energy-) and the squared z-component.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns E^2 - pz^2.\n\nNotes\n\nThe transverse components are defined with respect to the z-axis (3-axis), indicating a projection in the x-y plane.\n\nSee Also\n\nmt: For the transverse mass.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.mt","page":"Reference","title":"LorentzVectorBase.mt","text":"mt(lv)\n\nReturn the transverse mass (m_T) of a given Lorentz-vector-like lv, calculated as the square root of the squared transverse mass. The transverse mass is often used in high-energy physics to describe the effective mass of a system when only the transverse components are considered.\n\nExample\n\nFor a four-momentum (px, py, pz, E), this function returns sqrt(E^2 - pz^2).\n\nNotes\n\nIf the squared transverse mass (mTÂ²) is negative, the function returns -sqrt(-mTÂ²) to handle the imaginary mass situation that can occur in some relativistic systems.\nThe transverse components are defined with respect to the z-axis (3-axis), indicating momentum in the x-y plane.\n\nThrows\n\nMay include a warning if the transverse mass is negative, depending on user settings.\n\nSee Also\n\nmt2: For the squared transverse mass.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.rapidity","page":"Reference","title":"LorentzVectorBase.rapidity","text":"rapidity(lv)\n\nReturn the rapidity for a given Lorentz-vector-like lv.\n\nThe rapidity y is defined as:\n\ny = frac12log((E + p_z)  (E - p_z))\n\nwhere E is the energy (time- or 0-component of the Lorentz-vector-like), and pz is the component along the z-axis.\n\nExample\n\nFor a four-vector (px, py, pz, E), this function calculates the rapidity as:\n\ny = 0.5 * log((E + pz) / (E - pz))\n\nNotes\n\nRapidity is preferred over pseudorapidity when mass effects are significant, as it takes into account the energy and longitudinal momentum of the particle. In contrast, pseudorapidity depends only on the particle's direction and ignores mass.\nThe transverse components of the momentum are defined with respect to the 3-axis (beam axis).\nRapidity is Lorentz-invariant under boosts along the z-axis, making it useful for comparisons between different reference frames in collider experiments.\n\nwarning: Warning\nIf the particle's energy E is equal to its longitudinal momentum pz, resulting in a denominator of zero in the logarithm, the function will raise an error as rapidity is ill-defined in this case.\n\nSee Also\n\nLorentzVectorBase.eta: For the pseudorapidity of the Lorentz-vector-like.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.polar_angle","page":"Reference","title":"LorentzVectorBase.polar_angle","text":"polar_angle(lv)\n\nReturn the polar angle (theta) of the Lorentz-vector-like lv.\n\nExample\n\nIf the Lorentz-vector-like is a four-vector (x y z t), this is equivalent to arccos(z  sqrtx^2 + y^2 + z^2).\n\nnote: Note\nIf the Lorentz-vector-like is zero, the function returns zero for the angle.\n\nSee Also\n\nLorentzVectorBase.cos_theta: for a faster version of the cosine of the polar angle.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.cos_theta","page":"Reference","title":"LorentzVectorBase.cos_theta","text":"cos_theta(lv)\n\nReturn the cosine of the polar angle (theta) of the Lorentz-vector-like lv.\n\nDepending on the coordinate system, this might be an equivalent but faster version of cos(polar_angle(lv)).\n\nExample\n\nIf (x y z t) is a four-vector, this is equivalent to z  sqrtx^2 + y^2 + z^2.\n\nSee Also\n\nLorentzVectorBase.polar_angle: for the polar angle itself.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.cos_phi","page":"Reference","title":"LorentzVectorBase.cos_phi","text":"cos_phi(lv)\n\nReturn the cosine of the azimuthal angle (phi) of the Lorentz-vector-like lv.\n\nDepending on the coordinate system, this might be an equivalent but faster version of cos(phi(lv)).\n\nExample\n\nIf (x y z t) is a four-momentum, this is equivalent to x  sqrtx^2 + y^2.\n\nSee Also\n\nLorentzVectorBase.phi: for the azimuthal angle itself.\nLorentzVectorBase.sin_phi: for a faster version of the sine of the azimuthal angle.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.sin_phi","page":"Reference","title":"LorentzVectorBase.sin_phi","text":"sin_phi(lv)\n\nReturn the sine of the azimuthal angle (phi) of the Lorentz-vector-like lv.\n\nDepending on the coordinate system, this might be an equivalent but faster version of sin(phi(lv)).\n\nExample\n\nIf (x y z t) is a four-momentum, this is equivalent to y  sqrtx^2 + y^2.\n\nSee Also\n\nLorentzVectorBase.phi: for the azimuthal angle itself.\nLorentzVectorBase.cos_phi: for a faster version of the cosine of the azimuthal angle.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.plus_component","page":"Reference","title":"LorentzVectorBase.plus_component","text":"plus_component(lv)\n\nReturn the plus component (p^+) of the Lorentz-vector-like lv in light-cone coordinates.\n\nThis component is defined as (t + z) / 2, where t is the time (or energy) component and z is the third spatial component of the Lorentz-vector-like.\n\nExample\n\nIf (x, y, z, t) is a four-vector, this is equivalent to (t + z) / 2.\n\nwarning: Warning\nThis definition differs from the light-cone coordinate definitions commonly used in general relativity.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#LorentzVectorBase.minus_component","page":"Reference","title":"LorentzVectorBase.minus_component","text":"minus_component(lv)\n\nReturn the minus component (p^-) of the Lorentz-vector-like lv in light-cone coordinates.\n\nThis component is defined as (t - z) / 2, where t is the time (or energy) component and z is the third spatial component of the Lorentz-vector-like.\n\nExample\n\nIf (x, y, z, t) is a four-vector, this is equivalent to (t - z) / 2.\n\nwarning: Warning\nThis definition differs from the light-cone coordinate definitions commonly used in general relativity.\n\n\n\n\n\n","category":"function"},{"location":"10-interface/#interface","page":"Interface","title":"Interface","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"This section explains how an object can become a object with kinematic informations.","category":"page"},{"location":"10-interface/#Definition","page":"Interface","title":"Definition","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"A type that adheres to the interface described in this section will be referred to as KinematicInterface-compliant. A package providing such a type will be called the provider.","category":"page"},{"location":"10-interface/#Coordinate-Systems","page":"Interface","title":"Coordinate Systems","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"The provider must define a preferred coordinate system for its KinematicInterface-compliant type and provide accessors for the components of this system using standardized methods (outlined below). If the object natively supports multiple coordinate systems, the provider should choose the one in which component access is the most efficient as the preferred coordinate system. This system must be one of the supported options.","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"The LorentzVectorBase package supplements these component accessors to cover all supported coordinate systems. It uses the components of the preferred coordinate system to implement complementary accessors. Juliaâs dispatch mechanism prioritizes the accessors provided by the object itself.","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"note: Note\nA KinematicInterface-compliant type can store additional data beyond the four-vector. For instance, a type representing an elementary particle may comply while containing more information than just the particleâs four-momentum.","category":"page"},{"location":"10-interface/#Implementation","page":"Interface","title":"Implementation","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"A type MyLorentzVector (which do not necessary need to be a vector) will comply with the KinematicInterface if it implements one of the following sets of methods:","category":"page"},{"location":"10-interface/#Option-1:-Position-with-Cartesian-Coordinates","page":"Interface","title":"Option 1: Position with Cartesian Coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinate_system(::Type{MyLorentzVector}) = LorentzVectorBase.XYZE Declare the preferred coordinate system\nLorentzVectorBase.x(::MyLorentzVector) X Cartesian coordinate\nLorentzVectorBase.y(::MyLorentzVector) Y Cartesian coordinate\nLorentzVectorBase.z(::MyLorentzVector) Z Cartesian coordinate\nLorentzVectorBase.t(::MyLorentzVector) Time coordinate (t)","category":"page"},{"location":"10-interface/#Option-2:-Four-Momentum-with-Cartesian-Coordinates","page":"Interface","title":"Option 2: Four-Momentum with Cartesian Coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinate_system(::Type{MyLorentzVector}) = LorentzVectorBase.XYZE Declare the preferred coordinate system\nLorentzVectorBase.px(::MyLorentzVector) Momentum X-component\nLorentzVectorBase.py(::MyLorentzVector) Momentum Y-component\nLorentzVectorBase.pz(::MyLorentzVector) Momentum Z-component\nLorentzVectorBase.energy(::MyLorentzVector) Energy","category":"page"},{"location":"10-interface/#Option-3:-Four-Momentum-with-Cylindrical-Coordinates","page":"Interface","title":"Option 3: Four-Momentum with Cylindrical Coordinates","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Methods Brief Description\nLorentzVectorBase.islorentzvector(::Type{MyLorentzVector}) Declare that your type implements the interface\nLorentzVectorBase.coordinate_system(::Type{MyLorentzVector}) Declare the preferred coordinate system, which must return PtEtaPhiM, PtEtaPhiE, PtYPhiM, or PtYPhiE (from LorentzVectorBase)\nLorentzVectorBase.pt(::MyLorentzVector) Transverse momentum\nLorentzVectorBase.phi(::MyLorentzVector) Azimuthal angle","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Additionally, you must implement one of the following:","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Method Description\nLorentzVectorBase.eta(::MyLorentzVector) Pseudorapidity\nLorentzVectorBase.rapidity(::MyLorentzVector) Rapidity relative to the beam axis (z-axis)","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"And one of:","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Required Method Description\nLorentzVectorBase.energy(::MyLorentzVector) Energy\nLorentzVectorBase.mass(::MyLorentzVector) Invariant mass","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"The methods returning the coordinates of the preferred system (as specified by coordinate_system()) must be implemented.","category":"page"},{"location":"10-interface/#Optional-Methods","page":"Interface","title":"Optional Methods","text":"","category":"section"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Optional Method Description\nLorentzVectorBase.mass2(::MyLorentzVector) Square of the mass\nLorentzVectorBase.rho2(::MyLorentzVector) ÏÂ² = |p|Â² (squared momentum magnitude)","category":"page"},{"location":"10-interface/","page":"Interface","title":"Interface","text":"Additionally, any method from another option (i.e., a method from Option Y when methods from Option X are provided) may also be implemented.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = LorentzVectorBase","category":"page"},{"location":"#LorentzVectorBase","page":"Home","title":"LorentzVectorBase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LorentzVectorBase.","category":"page"}]
}
